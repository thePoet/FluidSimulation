#pragma kernel CSMain

struct Particle
{
    float2 position;
    float2 velocity;
};

RWStructuredBuffer<Particle> _Particles;


int _CubesPerAxis;

float _Time;

float rand(in float2 uv)
{
    return (frac(sin(dot(uv, float2(12.9898, 78.233) * 2.0)) * 43758.5453)) * 2 - 1;
}

int indexFromId(uint3 id)
{
    return id.x + _CubesPerAxis * (id.y + _CubesPerAxis * id.z);
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // Check if id is in the grid
    if (id.x > _CubesPerAxis - 1 || id.y > _CubesPerAxis - 1)
    {
        return;
    }


    // Assign random value
    _Particles[indexFromId(id)].position.x = rand(float2(id.x * _Time, id.y * _Time)) * 100.0;
    _Particles[indexFromId(id)].position.y = rand(float2(id.y * _Time, id.x * _Time)) * 100.0;

    
}

